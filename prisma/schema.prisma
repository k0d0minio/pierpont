// Prisma schema for normalized per-category Horeca board

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Day {
  id        Int      @id @default(autoincrement())
  dateISO   DateTime @unique
  weekday   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pdjGroups        PDJGroup[]
  hotelGuestEntries HotelGuestEntry[]
  golfEntries      GolfEntry[]
  eventEntries     EventEntry[]
}

model PDJGroup {
  id           Int      @id @default(autoincrement())
  day          Day      @relation(fields: [dayId], references: [id])
  dayId        Int
  size         Int
  label        String?
  notes        String?
  isAmbiguous  Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([dayId])
}

model HotelGuestEntry {
  id        Int      @id @default(autoincrement())
  day       Day      @relation(fields: [dayId], references: [id])
  dayId     Int
  size      Int
  source    String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([dayId])
}

model GolfEntry {
  id                 Int      @id @default(autoincrement())
  day                Day      @relation(fields: [dayId], references: [id])
  dayId              Int
  title              String
  participantsCount  Int?
  time               String?
  notes              String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([dayId])
}

model EventEntry {
  id        Int      @id @default(autoincrement())
  day       Day      @relation(fields: [dayId], references: [id])
  dayId     Int
  title     String
  startTime String?
  endTime   String?
  location  String?
  capacity  Int?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([dayId])
}


